version: '3.7'

services:
  postgres:
    image: postgres:13.1
    restart: always
    container_name: kong-ee-pg
    networks:
    - kong-ee-network
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: kong
    ports:
    - "6432:5432/tcp"
    # migration needed to populate the db for the first time
  kong-migration:
    # key to change the version to match the metrics in the dashboard and rules
    image: kong/kong-gateway:2.8.4.4
    # image: kong/kong-gateway:latest
    container_name: kong-ee-migration
    command: kong migrations bootstrap
    depends_on:
    - postgres
    environment:
      KONG_DATABASE: postgres
      KONG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-ee-pg
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    links:
    - postgres:postgres
    networks:
    - kong-ee-network
    restart: on-failure

  kong-ee:
    image: kong/kong-gateway:2.8.4.4
    # image: kong/kong-gateway:latest
    container_name: kong-ee
    networks:
    - kong-ee-network
    depends_on:
    - postgres
    - kong-migration
    restart: on-failure
    ports:
    - "8000:8000/tcp"
    - "8001:8001/tcp"
    - "8002:8002/tcp"
    - "8003:8003/tcp"
    - "8004:8004/tcp"
    - "443:443/tcp"
    - "8444:8444/tcp"
    - "8445:8445/tcp"
    - "8446:8446/tcp"
    - "8100:8100/tcp"
    environment:
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      # the license data should be configured as an environment variable prior to running the container
      # otherwise, the container will have limited functionality. 
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      # change the gui url to matcht the environment. Possibly update the dns names to 
      # eliminate the need for localhost
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-ee-pg
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
      KONG_PASSWORD: kong
      KONG_ENFORCE_RBAC: off
      KONG_AUDIT: on
      KONG_VITALS: on
      KONG_VITALS_STRATEGY: prometheus
      KONG_VITALS_TSDB_ADDRESS: prometheus:9090
      KONG_VITALS_STATSD_ADDRESS: statsd-exporter:9125
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_API_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_API_ERROR_LOG: /dev/stderr
      KONG_PORTAL_GUI_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_GUI_ERROR_LOG: /dev/stderr
      KONG_PORTAL_API_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_API_ERROR_LOG: /dev/stderr
      KONG_STATUS_LISTEN: 0.0.0.0:8100
      KONG_PROMETHEUS_PLUGIN_HEALTH_METRICS: "on"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_LISTEN: 0.0.0.0:8003, 0.0.0.0:8446 ssl
      KONG_PORTAL_GUI_HOST: 0.0.0.0:8003
      # example service to use for an endpoint or upstream
  httpbin:
    image: kennethreitz/httpbin
    networks:
    - kong-ee-network
    ports:
    - "80:80/tcp"
    restart: on-failure
    # must have the config files mounted or copied to the container 
  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    networks:
    - kong-ee-network
    container_name: prometheus
    volumes:
    - ./data/prometheus/:/etc/prometheus/
    command:
    - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
    - 9090:9090
    # must have the config files mounted or copied to the container 
  grafana:
    image: grafana/grafana:latest
    networks:
    - kong-ee-network
    container_name: grafana
    ports:
    - 3000:3000
    environment:
    - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    - GF_AUTH_ANONYMOUS_ENABLED=true
    - GF_AUTH_BASIC_ENABLED=false
    - GF_SMTP_ENABLED=true
    - GF_SMTP_HOST=smtp:25
    - GF_SMTP_SKIP_VERIFY=true
    - GF_SMTP_FROM_ADDRESS=play-demo@grafana.com
    volumes:
    - ./data/grafana/provisioning:/etc/grafana/provisioning

  # example smtp service for grafana
  smtp:
    image: ixdotai/smtp:v0.5.2
    ports:
    - 25:25
    networks:
    - kong-ee-network
    container_name: smtp

  # configured for metrics in the plugin. Includind the config file for default to sync with deck
  statsd-exporter:
    image: prom/statsd-exporter:v0.20.1
    hostname: statsd-exporter
    networks:
    - kong-ee-network
    container_name: statsd-exporter
    user: root
    # mount the config and configure for preferred scrapings
    volumes:
    - ./data/statsd_exporter/statsd_mapping.yml:/tmp/statsd_mapping.yml
    command:
    - "--statsd.mapping-config=/tmp/statsd_mapping.yml"
    - "--statsd.listen-unixgram=''"
    # work in progress so not functioning at this stage

    # - ./var/log:/var/log
networks:
  kong-ee-network:
    name: kong-ee-network
    driver: bridge
